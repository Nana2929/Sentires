##############################################################################
##
## author : zhanghc@thuir
##
## The '.task' file contains all necessary context of the specific sentiment
## resources extraction task.
##
## To drive a build-sentiment-resource task, the '.task' file should always
## contain following parts:
## I/O :
##  * POS-tagged corpus as input and its encoding charset.
##  * tuple formatted with "[L]\t${Feature}|${Opinion}" as output
##    and its encoding charset.
## Resources :
##  * background corpus used to filter background noises, which should be
##    generated by the given tool of the project.
##  * public sementic resources, which provide initial polarity of a given
##    opinion word.
##  * public linguistic resources, which provide some naive linguistic
##    resources generated manually.
##  * public stop word lists, which help to filter some already-known but
##    ambigous noises.
## Morphology & POS information:
##  * custom POS parser should be specified in this part, and
##  * specific patterns that are used to extract features.
##  * manual of the POS parser and morphology component can be found in
##    conf/morphology.properties.
## Metrics & Thresholds:
##  * all metrics and thresholds that are used in the approach.
##  * please refer to the Approach Document and learn about these metrics.
##
## It is strongly recommended that all related configurations of 'Resources'
## and 'Morphology & POS information' parts should be recorded in an individual
## property files to share with all other tasks.
##
##
##############################################################################
##
## I/O:
## In this part, all information of the input and output should be specified,
##
## Input:
task.io.corpus.file=lei/intermediate/validate.txt
task.io.corpus.charset=UTF8
task.io.feature.file=data/feature/manual.feature
task.io.feature.charset=UTF8
task.io.stop.feature.file=data/feature/stop.feature
task.io.stop.feature.charset=UTF8
task.io.stop.opinion.file=data/opinion/stop.opinion
task.io.stop.opinion.charset=UTF8

## Output:
task.io.lexicon.file=lei/intermediate/lexicon.txt
task.io.lexicon.charset=UTF8
lowest.frequency=4
#lowest.frequency=1

##
##############################################################################
##
## Metrics & Thresholds:
## In this part, all metrics and thresholds that are used in the approach
## should be specified.
##
include=/home/nanaeilish/projects/Github/Sentires-Guide/English-Jar/preset/relax.threshold

##
##############################################################################
##
## Resources:
## Specify all necessary resources location and other properties.
##
## It is strongly recommended to gather all configurations and organize
## them in one particular property file as it can be shared with other tasks.
##
## integrated property file:
#include=${path.preset}/default.resource
include=/home/nanaeilish/projects/Github/Sentires-Guide/English-Jar/preset/english.resource

##
# resource.stopword.path=stopword.res

##
##############################################################################
##
## Morphology & POS:
## Specify custom POS parser and extracting patterns.
##
## It is strongly recommended to gather all configurations and organize
## them in one particular property file as it can be shared with other tasks.
##
## integrated property file:
#include=${path.preset}/default.pattern
include=/home/nanaeilish/projects/Github/Sentires-Guide/English-Jar/preset/english.pattern
include=/home/nanaeilish/projects/Github/Sentires-Guide/English-Jar/preset/default.mapping

##
##############################################################################
